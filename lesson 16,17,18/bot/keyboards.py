from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardButton, InlineKeyboardMarkup

from utils import *

def generate_phone_button():
    """–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton(text="üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)]
        ], resize_keyboard=True
    )

def generate_main_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton(text='‚úîÔ∏è –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')],
            [KeyboardButton(text='üìô –ò—Å—Ç–æ—Ä–∏—è'), 
             KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∫–∞'), 
             KeyboardButton(text='üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')]
        ], resize_keyboard=True
    )

def back_to_main_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')]
    ], resize_keyboard=True)

def generate_category_menu(chat_id):
    total_price = db_get_final_price(chat_id)
    categories = db_get_categories()
    markup = InlineKeyboardMarkup(row_width=2)
    markup.row(
        InlineKeyboardButton(
            text=f'–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∫–∞  ({total_price if total_price else 0} —Å—É–º)',
            callback_data='cart'
        )
    )
    buttons = []
    for category in categories:
        bnt = InlineKeyboardButton(
            text=category.category_name,
            callback_data=f"category_{category.category_id}"
        )
        buttons.append(bnt)
    markup.add(*buttons)
    return markup


def generate_products_by_category(category_id):
    markup = InlineKeyboardMarkup(row_width=2)
    products = db_get_products(category_id)
    buttons = []
    for product in products:
        btn = InlineKeyboardButton(text=product.product_name, callback_data=f"product_{product.product_id}")
        buttons.append(btn)
    markup.add(*buttons)
    markup.row(
    InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='–ù–∞–∑–∞–¥')
    )
    return markup

def generate_product_price(quantity):
    markup = InlineKeyboardMarkup(row_width=3)
    number = quantity
    buttons = [
        InlineKeyboardButton(text='‚ûñ', callback_data='action -'),
        InlineKeyboardButton(text=f'{number}', callback_data=f'{number}'),
        InlineKeyboardButton(text='‚ûï', callback_data='action +'),
        InlineKeyboardButton(text='–ü–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É üòã', callback_data='put_into_cart')
    ]
    markup.add(*buttons)
    return markup


def back_to_menu():
    return ReplyKeyboardMarkup([
        [KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')]
    ], resize_keyboard=True)

def generate_cart_button(chat_id: int) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup(row_width=3)
    markup.row(
        InlineKeyboardButton(
            text="‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
            callback_data=f"order"
        )
    )
    cart_products = db_product_for_delete(chat_id)
    for finally_id, name in cart_products:
        markup.row(
            InlineKeyboardButton(
                text=f"‚ùå {name}",
                callback_data=f"delete_{finally_id}"
            )
        )
    return markup

def generate_setings_button():
    builder = InlineKeyboardMarkup()
    builder.row(
        InlineKeyboardButton(
            text='–°–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä',
            callback_data="change_phone"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", # TODO –°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∫—É
            url = "",
            callback_data="admin_site"
        )
    )
    return builder